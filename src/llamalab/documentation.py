class Hexcodes:
    abs = "d804"
    accessibility_button = "ec14"
    account_generic_add = "a813"
    account_pick = "d00f"
    account_sync_enabled = "f60f"
    account_sync_request = "9c13"
    account_sync_set_state = "f80f"
    acos = "da04"
    activity_start = "d20f"
    activity_start_result = "d40f"
    airplane_mode_enabled = "d60f"
    airplane_mode_set_state = "9a12"
    alarm = "f412"
    alarm_add = "bc12"
    alternative_launch = "f014"
    ambient_light = "d80f"
    ambient_temperature = "da0f"
    android_version = "b813"
    app_clear_cache = "a613"
    app_foreground = "dc0f"
    app_installed = "de0f"
    app_kill = "8a13"
    app_kill_background = "e00f"
    app_list = "b214"
    app_notifications_enabled = "b413"
    app_notifications_priority_get = "b414"
    app_notifications_priority_set = "b614"
    app_notifications_set_state = "b613"
    app_notifications_visibility_get = "b814"
    app_notifications_visibility_set = "ba14"
    app_op_mode = "c413"
    app_op_mode_set = "c613"
    app_pick = "aa13"
    app_usage = "bc14"
    array_add = "e20f"
    array_remove = "e40f"
    array_set = "e60f"
    asin = "dc04"
    assist_request = "ea0f"
    atan = "none"
    atan2 = "e004"
    atmospheric_pressure = "ec0f"
    atomic_clear_all = "cc13"
    atomic_compare_and_store = "ce13"
    atomic_add = "ca13"
    atomic_load = "d013"
    atomic_store = "d213"
    attention_light = "ea12"
    audio_device_connected = "e214"
    audio_player_control = "8012"
    audio_record_start = "ee0f"
    audio_record_stop = "f00f"
    audio_stream_muted = "ca14"
    audio_stream_set_mute = "cc14"
    audio_volume = "f20f"
    audio_volume_set = "f40f"
    base64_decode = "none"
    base64_encode = "none"
    battery_level = "fa0f"
    bearing = "none"
    bluetooth_device_connect = "f612"
    bluetooth_device_connected = "8212"
    bluetooth_device_disconnect = "ec13"
    bluetooth_device_pick = "8412"
    bluetooth_device_scan = "fa13"
    bluetooth_enabled = "8612"
    bluetooth_sco_set_state = "8c13"
    bluetooth_set_state = "8812"
    bluetooth_tether_enabled = "d212"
    bluetooth_tether_set_state = "d412"
    boolean = "none"
    broadcast_receive = "fc0f"
    broadcast_send = "fe0f"
    broadcast_send_ordered = "dc14"
    c2611an = "e013"
    c2798a = "dc01"
    c2799aa = "8402"
    c2800ab_f9181b = "none"
    c2801ac = "8602"
    c2802ad = "8802"
    c2803ae = "8a02"
    c2804af = "none"
    c2805ag = "none"
    c2806ah_f9186b = "none"
    c2807ai_f9187b = "ce01"
    c2808aj = "d001"
    c2809ak = "none"
    c2810al_f9189b = "none"
    c2812an = "none"
    c2813ao = "none"
    c2815aq = "d201"
    c2816ar = "d401"
    c2817as = "none"
    c2818at = "none"
    c2821b = "de01"
    c2824e = "e001"
    c2825f = "e201"
    c2826g = "ea01"
    c2827h = "e401"
    c2828i = "e601"
    c2829j = "e801"
    c2830k = "ec01"
    c2832m = "ee01"
    c2833n = "f001"
    c2834o = "f201"
    c2835p = "f401"
    c2836q = "f601"
    c2837r = "f801"
    c2838s = "fa01"
    c2839t = "ca01"
    c2840u_f9205b = "none"
    c2841v = "none"
    c2842w = "fc01"
    c2843x = "fe01"
    c2844y = "8002_1"
    c2845z = "8202"
    c2866i = "cc01"
    c3088a = "8e13"
    c3134a = "8213"
    c3240a = "e012"
    c3242c = "f413"
    c3274a = "8013"
    c3301ah = "b014"
    c3358y = "f613"
    calendar_event_add = "a412"
    calendar_event_get = "c412"
    calendar_event_query = "c612"
    calendar_pick = "a612"
    call_answer = "8010"
    call_end = "8210"
    call_incoming = "8410"
    call_number = "8610"
    call_outgoing = "8810"
    call_state = "8a10"
    camera_capture = "8e10"
    car_mode_enabled = "e212"
    car_mode_set_state = "e412"
    ceil = "e204"
    cell_signal_level = "8c10"
    cell_site_near = "c012"
    cell_site_pick = "c212"
    celsius = "none"
    char = "be05"
    cli_encode = "aa05"
    clipboard_get = "9010"
    clipboard_set = "9210"
    clock = "none"
    cloud_message_receive = "e213"
    cloud_message_send = "e413"
    color_pick = "ec12"
    color_recode = "none"
    compose_email = "9410"
    compose_mms = "9610"
    compose_sms = "9810"
    concat = "none"
    contact_pick = "9c10"
    contact_query = "9a10"
    contains = "none"
    content_changed = "9c14"
    content_copy = "9e10"
    content_delete = "9e14"
    content_insert = "a014"
    content_pick = "a010"
    content_query = "a214"
    content_shared = "a210"
    content_update = "a414"
    content_view = "a410"
    conv_type = "none"
    coord_format = "e604"
    copy = "b805"
    cos = "e804"
    cpu_speed_get = "f812"
    cpu_speed_set = "fa12"
    crc32 = "none"
    ctz = "none"
    cyanogen_mod_profile = "8a14"
    cyanogen_mod_profile_set = "8c14"
    data_usage = "ee12"
    database_modify = "ce14"
    database_query = "d014"
    date = "none"
    date_format = "none"
    date_parse = "none"
    date_parts = "none"
    date_pick = "a610"
    declination = "none"
    delay = "ac10"
    device_acceleration = "d413"
    device_docked = "ae10"
    device_idle_mode_active = "9614"
    device_idle_mode_set_state = "a614"
    device_interactive = "bc11"
    device_keep_awake = "b611"
    device_lock = "b010"
    device_orientation = "b210"
    device_reboot = "8413"
    device_restart = "8214"
    device_shutdown = "8613"
    device_unlocked = "b410"
    dial_number = "b610"
    dialog_choice = "b810"
    dialog_confirm = "ba10"
    dialog_input = "bc10"
    dialog_message = "ee14"
    dialog_number = "ac14"
    dialog_web = "8014"
    dictionary_put = "be10"
    dictionary_remove = "c010"
    disjoint = "none"
    display_on = "e414"
    distance = "none"
    distinct = "none"
    duration_format = "b205"
    duration_pick = "c210"
    email_send = "c610"
    except_function = "none"
    exp = "none"
    expression_decision = "c410"
    extend = "none"
    fahrenheit = "none"
    failure_catch = "de13"
    fiber_stop = "ca10"
    fiber_stopped = "d612"
    file_copy = "ce10"
    file_delete = "cc10"
    file_exists = "ac12"
    file_list = "d010"
    file_make_directory = "d410"
    file_monitor = "d210"
    file_move = "d610"
    file_pick = "d810"
    file_read = "da10"
    file_write = "dc10"
    filter = "none"
    find_all = "none"
    fingerprint_gesture = "d414"
    flashlight = "de10"
    floor = "none"
    flow_beginning = "e010"
    flow_beginning_pick = "a812"
    flow_pick = "da13"
    flow_start = "aa12"
    flow_stop = "9212"
    for_each = "e210"
    fork = "c810"
    ftp_delete = "e410"
    ftp_download = "e610"
    ftp_list = "e810"
    ftp_make_directory = "be13"
    ftp_upload = "ea10"
    fullscreen = "de14"
    g_drive_delete = "ee10"
    g_drive_download = "f010"
    g_drive_list = "f210"
    g_drive_make_directory = "c013"
    g_drive_share = "fe13"
    g_drive_upload = "f410"
    geocoding = "f810"
    geocoding_reverse = "fa10"
    glob = "ac05"
    gmail_send = "f610"
    gmail_unread_count = "8a12"
    google_now_voice_command = "ba12"
    goto = "8e14"
    hex_decode = "none"
    hex_encode = "bc05"
    hotword_detected = "ea14"
    http_request = "fe10"
    index_of = "none"
    infrared_transmit = "8414"
    input_method_pick = "b212"
    input_method_set = "b412"
    interact = "9a13"
    interact_touch = "da14"
    interruption_filter = "ba13"
    interruption_filter_set = "bc13"
    intersect = "none"
    join = "none"
    json_decode = "none"
    json_encode = "none"
    key_pressed = "d814"
    key_send = "f414"
    keyboard_visible = "9214"
    keys = "ae05"
    label = "9014"
    levenshtein = "none"
    local_time = "none"
    location_at = "8011"
    location_get = "8211"
    location_mock = "c814"
    location_pick = "8411"
    location_provider_enabled = "8811"
    location_provider_set_state = "9c12"
    location_show = "8611"
    log = "fe04"
    log_append = "8a11"
    log_await = "f214"
    lower_case = "8005"
    magnetic_field_strength = "d613"
    matches = "none"
    max = "none"
    md5 = "none"
    media_button = "8c11"
    media_playing = "ac13"
    media_store_add = "ec10"
    media_store_remove = "dc13"
    media_tags_read = "ae13"
    microphone_muted = "8e11"
    microphone_set_mute = "9011"
    mime_type = "none"
    min = "none"
    mms_send = "c213"
    mobile_data_enabled = "9412"
    mobile_data_network_type = "9414"
    mobile_data_set_state = "9612"
    mobile_network_preferred = "c813"
    mobile_network_preferred_set = "a413"
    mobile_operator = "f212"
    mobile_service_state = "be14"
    motion_gesture = "8813"
    network_connected = "cc12"
    network_throughput = "f012"
    network_type = "9411"
    nfc_enabled = "9611"
    nfc_set_state = "9e12"
    nfc_tag_scanned = "9811"
    nfc_tag_write = "9a11"
    night_mode_enabled = "e612"
    night_mode_set_state = "e812"
    notification_cancel = "9c11"
    notification_channel_pick = "e814"
    notification_action = "f813"
    notification_interact = "ce12"
    notification_policy_get = "c014"
    notification_policy_set = "c214"
    notification_posted = "d012"
    notification_show = "9e11"
    notification_snooze = "d214"
    number_format = "none"
    password_failed = "a611"
    pedometer = "a814"
    personal_activity = "b612"
    phone_equal = "none"
    phone_format = "none"
    ping = "9813"
    plug_in_condition = "a011"
    plug_in_event = "a211"
    plug_in_setting = "a411"
    pow = "none"
    power_save_mode_enabled = "a013"
    power_save_mode_set_state = "a213"
    power_source_plugged = "a811"
    preferred_activity = "e014"
    process_text = "c414"
    process_text_result = "c614"
    proximity = "aa11"
    quick_settings_tile_show = "ae14"
    random = "ba05"
    replace_all = "9205"
    resolve_activity = "d812"
    resolve_receiver = "da12"
    resolve_service = "dc12"
    restrict_background_data_enabled = "9814"
    restrict_background_data_set_state = "9a14"
    reverse = "none"
    ringer_mode = "ae11"
    ringer_mode_set = "b011"
    ringer_silence = "b012"
    ringtone_get = "a810"
    ringtone_pick = "ae12"
    ringtone_set = "aa10"
    roaming = "ac11"
    round = "none"
    screen_brightness = "b211"
    screen_brightness_set = "b411"
    screen_lock_set_state = "be12"
    screen_off_timeout = "b811"
    screen_off_timeout_set = "ba11"
    screen_orientation = "be11"
    screen_orientation_set = "a012"
    screenshot = "9613"
    service_start = "8c12"
    sha1 = "none"
    shell_command = "8e12"
    shell_command_superuser = "b812"
    shortcut_start = "9812"
    shuffle = "b005"
    sift = "none"
    significant_device_motion = "8614"
    sin = "none"
    slice = "none"
    sms_received = "c211"
    sms_send = "c411"
    sms_sent = "c611"
    sort = "none"
    sound_level = "8814"
    sound_play = "c811"
    sound_stop = "ca11"
    speak_play = "ce11"
    speak_stop = "d011"
    speak_to_file = "d211"
    speakerphone_on = "d411"
    speakerphone_set_state = "d611"
    speech_recognition = "cc11"
    split = "none"
    sql_encode = "none"
    sqrt = "none"
    storage = "b605"
    storage_media_mounted = "d811"
    storage_space = "da11"
    subroutine = "fc13"
    subscription_pick = "e613"
    substr = "b405"
    sum = "none"
    system_language_get = "c812"
    system_language_set = "aa14"
    system_property_get = "e813"
    system_setting_get = "dc11"
    system_setting_set = "de11"
    take_picture = "e011"
    tan = "none"
    time = "none"
    time_await = "a212"
    time_merge = "none"
    time_part = "none"
    time_pick = "e411"
    time_window = "e211"
    time_zone_get = "ca12"
    time_zone_set = "ee13"
    timer_add = "b013"
    toast_posted = "ea13"
    toast_show = "c011"
    tone_play = "9013"
    tone_stop = "e614"
    trim = "a005"
    trunc = "none"
    type = "none"
    union = "none"
    upper_case = "a405"
    url_decode = "none"
    url_encode = "a605"
    usb_tether_enabled = "9213"
    usb_tether_set_state = "9413"
    ussd_request = "d614"
    utc_time = "a805"
    values = "none"
    variable_assign = "e80f"
    variables_give = "fc12"
    variables_take = "fe12"
    version_compare = "none"
    vibrate_start = "e611"
    vibrate_stop = "e811"
    video_record_start = "f013"
    video_record_stop = "f213"
    wake_on_lan_send = "9e13"
    wallpaper_image_set = "ea11"
    wallpaper_live_set = "d813"
    weather = "ec11"
    wifi_connect = "f211"
    wifi_connected = "f411"
    wifi_ap_enabled = "ee11"
    wifi_ap_set_state = "f011"
    wifi_enabled = "f611"
    wifi_network_pick = "9211"
    wifi_network_scan = "f811"
    wifi_set_state = "fa11"
    wifi_signal_level = "b213"
    wired_headset = "9012"
    xml_decode = "none"
    xml_encode = "none"
    zip_compress = "fe11"
    zip_extract = "fc11"


class Blocks:
    accessibility_button = "an action block that awaits a accessibility button click"
    account_generic_add = "an action block that adds or replaces a generic credentials"
    account_pick = "a decision block that lets the user choose an account"
    account_sync_enabled = "a decision block that checks if automatic account data sync is enabled or disabled"
    account_sync_request = "an action block that requests a manual account data sync"
    account_sync_set_state = "an action block that enables or disables automatic account data sync"
    activity_start = "an action block that starts an app activity"
    activity_start_result = "a decision block that start an app activity"
    activity_start_voice = "an action block that starts an app activity"
    adb_shell_command = "an action block that executes a shell command through adb"
    airplane_mode_enabled = "a decision block that checks if airplane mode is enabled (mobile radio is off)"
    airplane_mode_set_state = "an action block that enables or disables airplane mode"
    alarm = "a decision block that gets or awaits the next alarm in the default clock app"
    alarm_add = "an action block that adds an alarm in the default clock app"
    alternative_launch = "an action block that awaits a launch of the alternative automate activity"
    ambient_light = "a decision block that checks the ambient light using the built-in sensor"
    ambient_temperature = "a decision block that checks the ambient temperature using the built-in sensor"
    android_version = "a decision block that checks the android version running on the device"
    app_clear_cache = "an action block that deletes all temporary files used by an app, clearing its cache"
    app_foreground = "a decision block that checks which app activity"
    app_installed = "a decision block that checks if an app is installed, or not"
    app_kill = "an action block that terminates all processes of a running app"
    app_kill_background = "an action block that terminates any running background processes ( services"
    app_list = "an action block that retrieve a list of apps installed on the device"
    app_notifications_enabled = "a decision block that checks if an app are allowed to show notifications"
    app_notifications_priority_get = "an action block that gets the maximum allowed priority for notifications shown by an app"
    app_notifications_priority_set = "an action block that sets the maximum allowed priority for notifications shown by an app"
    app_notifications_set_state = "an action block that enables or disables notifications for an app"
    app_notifications_visibility_get = "an action block that gets the visibility override for notifications shown by an app"
    app_notifications_visibility_set = "an action block that sets (override) the visibility for notifications shown by an app"
    app_op_mode = "an action block that checks the mode of an application operation (run-time permission) for an app"
    app_op_mode_set = "an action block that sets the mode for an application operation (run-time permission) for an app"
    app_pick = "a decision block that lets the user choose an app package"
    app_usage = "an action block that gets usage statistics for an app, or all apps, within an interval"
    array_add = "an action block that inserts a value into an array"
    array_remove = "an action block that removes an element from an array"
    array_set = "an action block that replaces an element in an array"
    assist_request = "an action block that awaits a user assist request"
    atmospheric_pressure = "a decision block that checks the atmospheric pressure using the built-in sensor"
    atomic_add = "an action block that adds the delta value"
    atomic_cas = "a decision block that stores the value of variable"
    atomic_clear_all = "an action block that clears all values stored for this flow"
    atomic_load = "an action block that assigns the stored value to variable"
    atomic_store = "an action block that stores the value of variable"
    attention_light = "an action block that turns the attention led light on or off"
    audio_device_connected = "a decision block that checks if an audio device is connected, or disconnected"
    audio_device_recording = "a decision block that checks if an audio device is recording"
    audio_player_control = "an action block that controls an audio player"
    audio_record_start = "an action block that records audio"
    audio_record_stop = "an action block that stops any ongoing audio recordings  started  by  the  audio  record  "
    audio_stream_muted = "a decision block that checks if an audio stream is currently muted"
    audio_stream_set_mute = "an action block that mute or unmute an audio stream"
    audio_volume = "a decision block that checks the volume setting for an audio stream"
    audio_volume_set = "an action block that change the volume setting for an audio stream"
    battery_level = "a decision block that checks battery charge level"
    bluetooth_device_connect = "a decision block that connects to a bluetooth device"
    bluetooth_device_connected = "a decision block that checks if a bluetooth device is connected, or disconnected"
    bluetooth_device_disconnect = "an action block that disconnects a bluetooth device"
    bluetooth_device_pick = "a decision block that lets the user choose a nearby bluetooth device"
    bluetooth_device_scan = "an action block that scans for nearby bluetooth devices"
    bluetooth_enabled = "a decision block that checks if bluetooth is enabled"
    bluetooth_sco_set_state = "an action block that enables or disables bluetooth sco audio routing"
    bluetooth_set_state = "an action block that enables or disables bluetooth"
    bluetooth_tether_enabled = "a decision block that checks if bluetooth tethering is enabled"
    bluetooth_tether_set_state = "an action block that enables or disables bluetooth tethering"
    broadcast_receive = "an action block that await an app broadcast"
    broadcast_send = "an action block that sends an app broadcast"
    broadcast_send_ordered = "a decision block that sends an app (ordered) broadcast"
    calendar_event_add = "an action block that adds an event to a calendar"
    calendar_event_get = "an action block that retrieves calendar event details"
    calendar_event_query = "a decision block that search for, or await calendar events"
    calendar_pick = "a decision block that search for events lets the user choose a calendar"
    call_answer = "an action block that answers an incoming (ringing) call"
    call_end = "an action block that ends an ongoing or ringing call"
    call_incoming = "an action block that awaits an incoming call"
    call_number = "an action block that initiates a phone number without user interaction"
    call_outgoing = "an action block that awaits an outgoing call"
    call_screening = "an action block that awaits an incoming call for screening"
    call_screening_response = "an action block that response to a screened call"
    call_state = "a decision block that checks the phone call state"
    capture_image = "a decision block that starts a camera app and lets the user take a picture"
    capture_video = "a decision block that starts a camera app and lets the user record a video"
    car_mode_enabled = "a decision block that checks if the car user interface mode is used, or not"
    car_mode_set_state = "an action block that turns the car user interface mode on, or off"
    cell_signal_level = "a decision block that checks the cellular signal strength"
    cell_site_near = "a decision block that checks nearby cellular towers"
    cell_site_pick = "a decision block that lets the user choose nearby cellular towers"
    clipboard_get = "an action block that get the clipboard"
    clipboard_set = "an action block that sets the current clip clipboard"
    cloud_message_receive = "an action block that receives a cloud message sent through the internet from another device running automate or the online endpoint"
    cloud_message_send = "an action block that sends a cloud message through the internet to another device running automate"
    cm_profile = "a decision block that checks the active cyanogenmod"
    cm_profile_set = "an action block that activates a cyanogenmod"
    color_pick = "a decision block that lets the user choose a color"
    compose_email = "an action block that compose an message in the default e-mail app, user has to send"
    compose_mms = "an action block that compose an mms in the default messaging app, user has to send"
    compose_sms = "an action block that compose an sms in the default messaging app, user has to send"
    contact_pick = "a decision block that lets the user choose a contact from the contacts app"
    contact_query = "a decision block that search for a contact and retrieve its details"
    content_changed = "an action block that awaits change in content provided by another app, such as contacts or calendar events"
    content_copy = "an action block that copy content provided by another app to external storage (sd card)"
    content_delete = "an action block that deletes content in another app, such as contacts or calendar events"
    content_insert = "an action block that inserts new content into another app, such as contacts or calendar events"
    content_offer = "an action block that offers content to other apps"
    content_offer_result = "an action block that gives the offered content to the requesting app"
    content_pick = "a decision block that lets the user choose content provided by other apps"
    content_query = "an action block that queries content provided by another app, such as contacts or calendar events"
    content_shared = "an action block that awaits content shared/sent from within another app"
    content_update = "an action block that updates content in another app, such as contacts or calendar events"
    content_view = "an action block that opens some content for viewing"
    cpu_speed_get = "an action block that gets the cpu governor and speed"
    cpu_speed_set = "an action block that sets the cpu governor and speed"
    data_usage = "an action block that gets the network data usage statistics"
    database_modify = "an action block that modifies content stored in a sqlite"
    database_query = "an action block that queries content stored in a sqlite"
    date_pick = "a decision block that lets the user choose a date"
    delay = "an action block that delays execution, pause the fiber"
    device_acceleration = "a decision block that checks the acceleration of the device using the built-in sensor"
    device_docked = "a decision block that checks if the device is docked, or undocked"
    device_idle_mode_active = "a decision block that checks if the device is in idle doze mode"
    device_idle_mode_set_state = "an action block that activates or deactivates device idle doze mode"
    device_interactive = "a decision block that checks if the device is in an interactive state, or not"
    device_keep_awake = "an action block that temporarily keeps the cpu and/or wi-fi hardware awake"
    device_lock = "an action block that locks the device, as if the lock screen timeout expired. the user will be forced to reenter the pattern, pin or password when unlocking, use the interact"
    device_orientation = "a decision block that checks the device orientation using the built-in sensors"
    device_reboot = "an action block that reboots the device"
    device_restart = "an action block that restarts (soft reboots) the device"
    device_shutdown = "an action block that shuts down (powers off) the device"
    device_unlocked = "a decision block that checks if the device is unlocked, or locked"
    dial_number = "an action block that only enters a phone number into the phone app without initiating the call"
    dialog_choice = "a decision block that lets the user select from a list of choices"
    dialog_confirm = "a decision block that shows a message and lets the user confirm"
    dialog_input = "a decision block that lets the user enter text"
    dialog_message = "an action block that shows a message"
    dialog_number = "a decision block that lets the user select a numeric value within a range"
    dialog_web = "a decision block that lets the user view a web or html page"
    dictionary_put = "an action block that associates a value with a key in a dictionary"
    dictionary_remove = "an action block that removes any value associated with a key from a dictionary"
    display_on = "a decision block that checks if a display is turned on, or off"
    display_query = "a decision block that queries connected displays"
    duration_pick = "a decision block that lets the user choose a duration time"
    email_send = "an action block that sends an e-mail message via an smtp server without user interaction"
    expression_decision = "a decision block that checks if an expression"
    failure_catch = "a special block that catches any failure in a subsequent block, preventing the fiber from stopping"
    fiber_stop = "an action block that stops another fiber"
    fiber_stopped = "a decision block that checks if a child fiber"
    file_copy = "an action block that copies content on external storage"
    file_delete = "an action block that deletes content on external storage"
    file_exists = "a decision block that checks if a file or directory exists on external storage"
    file_list = "an action block that lists content on external storage"
    file_make_directory = "an action block that creates a directory on external storage"
    file_monitor = "an action block that awaits alterations to the file system"
    file_move = "an action block that moves content on the external storage"
    file_pick = "a decision block that lets the user choose a file system path"
    file_read = "an action block that loads the content of a text file"
    file_write = "an action block that write or append content to a file"
    fingerprint_gesture = "an action block that awaits a gesture performed on the fingerprint scanner"
    flashlight = "an action block that turns the camera flash led light on or off"
    flow_beginning = "a special block that is the starting point of a flow "
    flow_beginning_pick = "a decision block that lets the user choose a flow"
    flow_pick = "a decision block that lets the user choose a flow"
    flow_start = "an action block that starts another flow"
    flow_stop = "an action block that stops a flow"
    for_each = "a special block that iterates over each element in an array, entry in a dictionary"
    fork = "a special block that starts a new fiber by copying the state of the current one"
    ftp_delete = "an action block that deletes content on an ftp server"
    ftp_download = "an action block that downloads content from an ftp server"
    ftp_list = "an action block that lists the content on an ftp server"
    ftp_make_directory = "an action block that creates a directory on an ftp server"
    ftp_upload = "an action block that uploads content to an ftp server"
    fullscreen = "a decision block that await change in status or navigation bar visibility"
    gdrive_delete = "an action block that deletes content on google drive"
    gdrive_download = "an action block that downloads content from google drive"
    gdrive_list = "an action block that lists the content on google drive"
    gdrive_make_directory = "an action block that creates a directory on google drive"
    gdrive_share = "an action block that enables public sharing of an file on google drive"
    gdrive_upload = "an action block that uploads content to google drive"
    geocoding = "an decision block that finds the geographic coordinate of an address or location name"
    geocoding_reverse = "an decision block that finds the address or location name for a geographic coordinate"
    gmail_send = "an action block that sends an e-mail message with gmail (google mail) without user interaction"
    gmail_unread_count = "an action block that gets unread conversation count from the gmail app"
    google_assistant_action = "an action block that awaits a voice action for automate spoken into the google"
    goto = "a special block that transfer control of the fiber (jump) to a label"
    heart_rate = "a decision block that checks heart rate using available sensor"
    hinge_angle = "a decision block that checks hinge angle of a foldable device"
    hotword_detected = "an action block that awaits a spoken hotword"
    http_request = "an action block that performs a http request, download content from the internet"
    icon_pick = "a decision block that lets the user choose an icon"
    infrared_transmit = "an action block that transmits an ir command"
    input_method_pick = "a decision block that lets the user choose an input method (soft keyboard)"
    input_method_set = "an action block that sets the current (default) input method (soft keyboard)"
    inspect_layout = "a decision block that allows inspection of the on-screen user interface layout"
    interact = "a decision block that interacts with the on-screen user interface"
    interact_touch = "a decision block that simulate a touchscreen gesture"
    interruption_filter = "a decision block that checks the interruptions (do not disturb) setting"
    interruption_filter_set = "an action block that sets the interruptions (do not disturb) setting"
    key_pressed = "a decision block that awaits a key/button press or release"
    key_send = "a decision block that send/simulate a key/button press or release"
    keyboard_visible = "a decision block that checks if the physical (hardware) keyboard is visible, or not"
    keychain_alias_pick = "a decision block that lets the user choose an alias for cryptographic credentials, i.e. key and/or certificate, stored in the system keychain"
    label = "a special block that does nothing except acting as a destination for go to blocks"
    location_at = "a decision block that checks if the device is at a location, geographic coordinate"
    location_get = "an action block that gets the current device location, geographic coordinate"
    location_mock = "an action block that mocks (fakes) a location fix update originating from provider"
    location_pick = "a decision block that lets the user choose a location on a map"
    location_provider_enabled = "a decision block that check if a specific location provider is enabled"
    location_provider_set_state = "an action block that enables or disables a location provider"
    location_show = "an action block that shows a location in the default map app"
    log_append = "an action block that appends a message to the flow"
    log_await = "an action block that await a message logged by an app or system component"
    magnetic_field_strength = "a decision block that checks the surrounding magnetic field strength using the built-in sensor"
    media_button = "an action block that awaits a media button press"
    media_playing = "a decision block that checks audio or video playback"
    media_store_add = "an action block that adds files to the media store so they show up in the gallery and music app"
    media_store_remove = "an action block that remove files from the media store, so they dont show up in the gallery and music app"
    media_tags_read = "an action block that reads metadata tags from media content such as audio, video or image"
    microphone_muted = "a decision block that checks if the microphone is currently muted"
    microphone_set_mute = "an action block that mute or unmute the microphone"
    mms_send = "an action block that sends an mms without user interaction"
    mobile_data_enabled = "a decision block that checks if mobile data is enabled"
    mobile_data_network_type = "a decision block that checks the active mobile data network type"
    mobile_data_set_state = "an action block that enables or disables mobile data"
    mobile_network_preferred = "a decision block that checks the currently preferred mobile network"
    mobile_network_preferred_set = "an action block that sets the preferred mobile network"
    mobile_operator = "a decision block that checks the mobile operator"
    mobile_service_state = "a decision block that checks the mobile service (sim) state"
    motion_gesture = "an action block that waits for a device motion gesture, like a shake, twist, etc"
    network_connected = "a decision block that checks if a network is connected, the network used for internet connections"
    network_throughput = "a decision block that checks the current network throughput"
    network_type = "a decision block that checks the active network type"
    nfc_enabled = "a decision block that checks if nfc is enabled"
    nfc_set_state = "an action block that enables or disables nfc"
    nfc_tag_scanned = "an action block that waits for an nfc tag to be scanned by the user"
    nfc_tag_write = "a decision block that lets the user write content to nfc tags"
    night_mode_enabled = "a decision block that checks if the night user interface mode is used, or not"
    night_mode_set_state = "an action block that sets the night user interface mode"
    notification_action = "a decision block that present action buttons in a status bar notification and wait until the user clicks any of them"
    notification_cancel = "an action block that cancel a status bar notification"
    notification_channel_pick = "a decision block that lets the user choose a notification channel"
    notification_interact = "an action block that interacts with a status bar notification"
    notification_policy_get = "an action block that gets the policy settings for priority notifications which bypass do not disturb"
    notification_policy_set = "an action block that sets the policy settings for priority notifications which bypass do not disturb"
    notification_posted = "a decision block that checks if a status bar notification is posted"
    notification_show = "a decision block that shows a status bar notification"
    notification_snooze = "an action block that snoozes a status bar notification"
    nsd_discover = "an action block that scans the network to discover application services. currently only supports dns service discovery"
    password_failed = "a decision block that awaits a failed or successful password unlock"
    pedometer = "an action block that counts each step a person takes"
    physical_activity = "an action block that waits a physical activity such as walking, running, etc."
    ping = "a decision block that checks if a host is reachable"
    plugin_condition = "an decision block that checks a condition of an app which support the tasker"
    plugin_event = "an action block which awaits an event to be triggered by an app which support the tasker"
    plugin_setting = "an action block that performs a setting action of an app which support the tasker"
    power_save_mode_enabled = "a decision block that checks if power save mode is enabled"
    power_save_mode_set_state = "an action block that enables or disables power save mode"
    power_source_plugged = "a decision block that checks if the device is plugged to an external power source"
    preferred_activity = "an decision block that gets the default app activity"
    process_text = "a special block that awaits text selected for processing from within another app"
    process_text_result = "an action block that replaces the text selected for processing"
    proximity = "a decision block that checks the proximity, distance to the device using the built-in sensor"
    quick_settings_tile_show = "a decision block that shows an quick settings tile"
    relative_humidity = "a decision block that checks the relative ambient air humidity using the built-in sensor"
    resolve_activity = "an decision block that resolves an app activity"
    resolve_receiver = "an decision block that resolves an app broadcast receiver"
    resolve_service = "an decision block that resolves an app service"
    restrict_background_data_enabled = "a decision block that checks if restrict background data is enabled"
    restrict_background_data_set_state = "an action block that enables or disables restrict background data"
    ringer_mode = "a decision block that checks the phone call ringer mode"
    ringer_mode_set = "an action block that sets the phone call ringer mode"
    ringer_silence = "an action block that silence the ringer (ringtone) and stop vibrate if a call is ringing"
    ringtone_get = "an action block that gets the sound used as a default ringtone"
    ringtone_pick = "a decision block that lets the user choose a ringtone sound"
    ringtone_set = "an action block that sets the sound used as a default ringtone"
    roaming = "a decision block that checks if the device is roaming"
    screen_brightness = "a decision block that checks the screen brightness settings"
    screen_brightness_set = "an action block that sets the screen brightness settings"
    screen_lock_set_state = "an action block that temporarily disables or reenables the screen lock (keyguard)"
    screen_off_timeout = "a decision block that checks the screen off timeout setting"
    screen_off_timeout_set = "an action block that sets the screen off timeout setting"
    screen_orientation = "a decision block that checks if the screen is in portrait or landscape orientation"
    screen_orientation_set = "an action block that sets screen orientation"
    screenshot = "an action block that takes a screenshot, a capture of the current screen"
    service_start = "an action block that starts an app service"
    shell_command = "an action block that executes a shell command"
    shell_command_superuser = "an action block that executes a shell command as superuser"
    shortcut_pin = "an action block that install/pin an app shortcut to the default launcher home screen"
    shortcut_start = "an action block that starts an app from a shortcut"
    significant_device_motion = "an action block that awaits a significant device motion occurring after being stationary/asleep"
    sms_received = "an action block that awaits an incoming sms"
    sms_send = "an action block that sends an sms without user interaction"
    sms_sent = "an action block that awaits an outgoing sms"
    sound_level = "a decision block that checks the surrounding or internal mixers sound level"
    sound_play = "an action block that plays a sound"
    sound_stop = "an action block that stops any ongoing sound playback started by the sound play"
    speak_play = "an action block that speaks a message"
    speak_stop = "an action block that stops any ongoing text-to-speech playback started by the speak"
    speak_to_file = "an action block that speaks a message"
    speakerphone_on = "a decision block that checks if the speakerphone is currently turned on"
    speakerphone_set_state = "an action block that enable or disable the speakerphone"
    speech_recognition = "an action block that records your speech and transcribes the spoken word into text"
    split_screen_mode_enabled = "a decision block that checks if the ui is in split-screen mode"
    storage_media_mounted = "a decision block that checks if the storage volume at mounting point path"
    storage_space = "a decision block that checks if the free storage space is more that 10% (okay) or less (low)"
    subroutine = "a special block that executes a subset of blocks in a new fiber and waits for it to stop, optionally with results"
    subscription_pick = "a decision block that lets the user choose a sim card/subscription"
    system_language_get = "an action block that gets the system language"
    system_language_set = "an action block that sets the system language"
    system_property_get = "an action block that gets the value of a system property"
    system_setting_get = "an action block that gets the value of a system setting"
    system_setting_set = "an action block that sets the value of a system setting"
    take_picture = "an action block that takes a picture without user interaction"
    time_await = "a decision block that awaits a specific or recurring time of day"
    time_pick = "a decision block that lets the user choose a time of day"
    time_window = "a decision block that checks, or awaits a specific or recurring window of time"
    time_zone_get = "an action block that gets the time zone used by the device"
    timer_add = "an action block that adds a countdown timer in the default clock app"
    toast_posted = "an action block that awaits a toast message to be shown on screen"
    toast_show = "an action block that briefly shows a toast message on screen"
    tone_play = "an action block that plays a dtmf tone"
    tone_stop = "an action block that stops any ongoing tone playback started by the tone play"
    usb_tether_enabled = "a decision block that checks if usb tethering is enabled"
    usb_tether_set_state = "an action block that enables or disables usb tethering"
    user_asleep = "a decision block that await the user falling asleep or waking up"
    ussd_request = "an action block that send a ussd"
    variable_assign = "an action block that assigns a value to a variable"
    variables_give = "an action block that gives variable values to another fiber. this block in combination with a variables take"
    variables_take = "an action block that takes variable values given from other fibers. this block in combination with one or more variables give"
    vibrate_start = "an action block that vibrates the device"
    vibrate_stop = "an action block that stops any ongoing vibration started by the vibrate"
    video_record_start = "an action block that records video"
    video_record_stop = "an action block that stops any ongoing audio recordings started by the video record"
    wake_on_lan_send = "an action block that sends a wake-on-lan packet (udp) to awake a remote device"
    wallpaper_image_set = "an action block that sets the home screen background wallpaper to an image"
    wallpaper_live_set = "an action block that sets a live home screen background wallpaper"
    weather = "an decision block that gets the current weather or a forecast"
    wifi_ap_enabled = "a decision block that checks if wi-fi hotspot is enabled"
    wifi_ap_set_state = "an action block that enables or disables wi-fi hotspot"
    wifi_enabled = "a decision block that checks if wi-fi is enabled"
    wifi_network_connect = "a decision block that connects to a wi-fi network (access point)"
    wifi_network_connected = "a decision block that checks if wi-fi is connected to a network (access point)"
    wifi_network_pick = "a decision block that lets the user choose a nearby wi-fi network (access point)"
    wifi_network_scan = "an action block that scans for nearby wi-fi networks (access points)"
    wifi_set_state = "an action block that enables or disables wi-fi"
    wifi_signal_level = "a decision block that checks wi-fi signal strength"
    wired_headset = "a decision block that checks if a wired headset is plugged in or unplugged"
    zip_compress = "an action block that compresses content into a zip file"
    zip_extract = "an action block that extracts content from a zip file"


class Variables:
    infinity = "constant holding the number for positive infinity"
    nan = "constant holding a number for (ieee 754) not-a-number"
    now = "an immutable variable holding a unix timestamp for the current time. this variable is idempotent so it doesn’t change during the execution of a block when used in an input argument expression. see also clock function"
    pi = "constant holding the number that is closer than any other to pi, the ratio of the circumference of a circle to its diameter"


class Expressions_and_Operators:
    arithmetic_operators = "arithmetic operators take numerical values (either literals or variables) as their operands and return a single numerical value. ] any non-numerical operand is first converted to a number"
    addition = "[ + ] a binary operator; 1 + 2 returns 3"
    subtraction = "[ - ] a binary operator; 2 - 1 returns 1"
    multiplication = "[ * ] a binary operator; 2 * 2 returns 4"
    division = "[ / ] a binary operator; 10 / 3 returns 3.333. 10 / 0 returns infinity"
    integer_division = "[ // ] a binary operator; 10 // 3 returns 3. 10 // 0 returns infinity"
    modulus = "[ % ] a binary operator that returns the remainder of dividing the two operands; 12 % 5 returns 2"
    negate = "[ - ] a unary prefix operator that returns the negation of its operand; -(-5) returns 5"
    bitwise_operators = "[  bitwise operators treat their operands as a set of 32 bits"
    bitwise_and = "[ & ] a binary operator that returns a one in each bit position for which the corresponding bits of both operands are ones; 0b0101 & 0b0011 returns 0xb0001"
    bitwise_or = "[ | ] a binary operator that returns a one in each bit position for which the corresponding bits of either or both operands are ones; 0b0101 | 0b0011 returns 0b0111"
    bitwise_xor = "[ ^ ] a binary operator that returns a one in each bit position for which the corresponding bits of either but not both operands are ones; 0b0101 ^ 0b0011 returns 0x0110"
    bitwise_not = "[ ~ ] a unary operator that inverts the bits of its operand; ~0b1 returns 0xfffffffe"
    left_bit_shift = "[ << ] a binary operator that shifts the bits to the left; 0b10010111 << 1 returns 0b00101110"
    right_bit_shift = "[ >> ] a binary operator that shifts the bits to the right, keeping the sign of a negative number; 0b10010111 >> 1 returns 0b11001011"
    zero_fill_right_bit_shift = "[ >>> ] a binary operator that shifts the bits to the right, without keeping the sign of a negative number; 0b10010111 >>> 1 returns 0b01001011"
    comparison_operators = "a comparison operator compares its operands and returns a logical value based on whether the comparison is true. the operands can be numbers or texts. if the value type of operands differ 0 is returned. texts are compared on case-sensitive lexicographical order"
    equal = "[ = ] a binary operator that returns 1 if the operands are equal; 3 = 3 returns 1"
    not_equal = "[ != ] a binary operator that returns 1 if the operands are not equal; 3 != 3 returns 0"
    greater_than = "[ > ] a binary operator that returns 1 if the left operand is greater than the right operand; 2 > 2 returns 0"
    greater_or_equal = "[ >= ] a binary operator that returns 1 if the left operand is greater than or equal to the right operand; 2 >= 2 returns 1"
    less_than = "[ < ] a binary operator that returns 1 if the left operand is less than the right operand; 2 < 2 returns 0"
    less_or_equals = "[ <= ] a binary operator that returns 1 if the left operand is less than or equal to the right operand; 2 <= 2 returns 1"
    logical_operators = "automate does not have a value type nor literals for true or false, instead the following are considered false: ] a null value. the number zero. ] a nan (not-a-number). ] an empty, zero length text. ] an empty array. ] an empty dictionary. ] all other values are considered true"
    logical_and = "[ && ] a binary operator that returns left operand if it evaluate to false, otherwise right operand is returned; 2 && 3 returns 3"
    logical_or = '[ || ] a binary operator that returns left operand if it evaluate to true, otherwise right operand is returned; 2 || 3 returns 2. null || 0 ||  = "[hi = "[  returns  = "[hi = "'
    logical_not = '[ ! ] a unary prefix operator that returns 1 if the operand evaluate to true, otherwise 0 is returned; !3 returns 0'
    special_operator_to_number = '[ + ] an unary prefix operator that returns the operand converted to a number; + = "[2 = "[  returns 2, + = "[0xff = "[  returns 255'
    special_operator_to_text = '[ ++ ] an unary prefix operator that returns the operand converted to text; ++2 returns  = "[2 = "'
    text_concatenation = '[ ++ ] a binary operator that returns the two operands concatenated into a text;  = "[good = "[ ++ = "[bye = "[  returns  = "[goodbye = "[ , 2++2 returns  = "[22 = "'
    conditional = '[ ? : ] a ternary operator, operand ? operand : operand; if the first operand evaluate to true the seconds operand is returned, otherwise the third operand is returned; 2=2 ?  = "[two = "[  :  = "[other = "[  returns  = "[two = "'
    length = '[ # ] an unary prefix operator; if the operand is a text, returns the number of characters; # = "[hi = "[  returns 2. if the operand is an array, returns the number of elements; #[1,2] returns 2. if the operand is a dictionary, returns the number of entries; #{ = "[a = "[ :1, = "[b = "[ :2} returns 2. otherwise zero is returned. subscript [ ] ] a binary operator, operand[operand]; if the first operand is a text, returns the unicode character at the index of the seconds operand;  = "[hi = "[ [1] returns 105. if the first operand is an array, returns the element at the index of the second operand; [ = "[a = "[ , = "[b = "[ , = "[c = "[ ][1] returns  = "[b = "[ . if the first operand is a dictionary, returns the value mapped to the key of the second operand; { = "[a = "[ :1, = "[b = "[ :2}[ = "[b = "[ ] returns 2. otherwise null is returned.'


class Functions:
    abs = "absolute value"
    acos = "arc cosine of value"
    asin = "arc sine of value"
    atan = "arc tangent of value"
    atan2 = "arc tangent of quotient"
    base64_decode = "decode base64"
    base64_encode = "encode base64"
    bearing = "bearing to a location"
    ceil = "smallest integer greater than or equal to value"
    celsius = "fahrenheit to celsius"
    char = "unicode codepoint to text"
    cli_encode = "encode command line text"
    clock = "time of clock"
    color_recode = "convert color"
    concat = "concatenate arrays"
    contains = "array, dictionary or text contains value"
    conv_type = "conversion type of dictionary entry"
    coord_format = "format a coordinate"
    copy = "clone a value"
    cos = "trigonometric cosine of an angle"
    crc32 = "crc32 checksum"
    ctz = "count trailing zero bits"
    date = "year, month, day to timestamp"
    date_format = "format a date and/or time"
    date_parts = "split timestamp into date parts"
    date_parse = "parse a date"
    disjoint = "values not present in both containers"
    distance = "distance between locations"
    distinct = "remove duplicate elements"
    declination = "declination of the horizontal component of the magnetic field"
    duration_format = "format a duration"
    exp = "euler’s constant raised to the power of value"
    except_function = "values not present in other container"
    extend = "combine dictionaries"
    fahrenheit = "celsius to fahrenheit"
    file_uri = "file path to uri"
    filter = "filter an array or dictionary of null values"
    find_all = "text regular expression matching"
    floor = "largest integer less than or equal to value"
    glob = "text pattern matching"
    hex_decode = "decode hex"
    hex_encode = "encode hex"
    index_of = "index of element in array"
    intersect = "values present in both containers"
    json_decode = "parse json"
    json_encode = "encode json"
    join = "join array elements with a delimiter"
    keys = "dictionary keys"
    levenshtein = "text similarity"
    local_time = "adjust timestamp to local time"
    log = "natural logarithm (base e) of value"
    lower_case = "text to lower case characters"
    matches = "text regular expression matching"
    max = "greater value"
    md5 = "md5 cryptographic hash"
    mimetype = "data type from a filename/uri"
    min = "lesser value"
    number_format = "format a number"
    phoneq = "compare phone numbers"
    phone_format = "format a phone number"
    pow = "raised to the power of number"
    random = "generate pseudo-random number"
    replace_all = "text regular expression search and replace"
    reverse = "reverse array elements"
    round = "round to the nearest integer"
    sha1 = "sha-1 cryptographic hash"
    sha256 = "sha-256 cryptographic hash"
    shuffle = "shuffle array elements"
    slice = "sub-section of array = "
    sift = "filter container by indices/keys"
    sin = "trigonometric sine of an angle"
    sort = "sort array"
    split = "text split around matches of regular expression"
    sql_encode = "encode an sql value"
    sqrt = "positive square root of value"
    storage = "external storage directory"
    substr = "part of text"
    sum = "sum of array or dictionary values"
    tan = "trigonometric tangent of an angle"
    time = "time in seconds"
    time_merge = "combine date and time"
    time_part = "timestamp time of day"
    trim = "omit leading and trailing whitespace"
    trunc = "integral part of value"
    type = "value type"
    union = "combined values"
    upper_case = "text to upper case characters"
    url_decode = "decode url"
    url_encode = "encode url"
    utc_time = "adjust timestamp to utc time"
    values = "dictionary values"
    vercmp = "compare version strings"
    xml_decode = "parse xml"
    xml_encode = "encode xml"
    xpath_encode = "encode xpath string literal"
